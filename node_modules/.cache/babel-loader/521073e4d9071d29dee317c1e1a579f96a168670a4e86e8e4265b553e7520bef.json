{"ast":null,"code":"import Guess from\"./components/Guess\";import NumPad from\"./components/NumPad\";import Number from\"./components/RandomNumber\";import React,{useState,useEffect,createContext}from\"react\";import\"./App.css\";import axios from\"axios\";import{boardDefault}from\"../src/components/BoardDefault\";import QuestionMarkButton from\"../src/components/QuestionMark\";// Assuming this is the correct path to your component\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const AppContext=/*#__PURE__*/createContext();function App(){// Assuming guess is a state variablE\nconst[test,setTest]=useState(\"\");const[rand,setRand]=useState(0);const[index,setIndex]=useState(\"\");useEffect(()=>{axios.get(\"https://numbling.up.railway.app/post_random\").then(function(response){setRand(response.data);});});const[board,setBoard]=useState(boardDefault);const[currentAttempt,setCurrentAttempt]=useState(0);const handleClick=()=>{// Handle button click logic here\nconsole.log(\"Button clicked!\");};return/*#__PURE__*/_jsx(\"div\",{className:\"parent\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[/*#__PURE__*/_jsx(\"span\",{style:{display:\"inline-block\"},children:\"Numbling!\"}),/*#__PURE__*/_jsx(\"span\",{style:{display:\"inline-block\",marginLeft:\"auto\"},children:/*#__PURE__*/_jsx(QuestionMarkButton,{onClick:handleClick})})]}),/*#__PURE__*/_jsx(AppContext.Provider,{value:{board,setBoard,currentAttempt,setCurrentAttempt,rand},children:/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[/*#__PURE__*/_jsx(Number,{className:\"number\"}),/*#__PURE__*/_jsx(Guess,{className:\"guess\",number:test,guess:\"0123456789\"}),/*#__PURE__*/_jsx(NumPad,{className:\"numpad\"})]})})]})});}export default App;","map":{"version":3,"names":["Guess","NumPad","Number","React","useState","useEffect","createContext","axios","boardDefault","QuestionMarkButton","jsx","_jsx","jsxs","_jsxs","AppContext","App","test","setTest","rand","setRand","index","setIndex","get","then","response","data","board","setBoard","currentAttempt","setCurrentAttempt","handleClick","console","log","className","children","style","display","marginLeft","onClick","Provider","value","number","guess"],"sources":["C:/Users/xmanhowell9/Desktop/NUMBLE/frontend/src/App.js"],"sourcesContent":["import Guess from \"./components/Guess\";\nimport NumPad from \"./components/NumPad\";\nimport Number from \"./components/RandomNumber\";\nimport React, { useState, useEffect, createContext } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { boardDefault } from \"../src/components/BoardDefault\";\nimport QuestionMarkButton from \"../src/components/QuestionMark\"; // Assuming this is the correct path to your component\nexport const AppContext = createContext();\n\nfunction App() {\n  // Assuming guess is a state variablE\n  const [test, setTest] = useState(\"\");\n  const [rand, setRand] = useState(0);\n  const [index, setIndex] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"https://numbling.up.railway.app/post_random\")\n      .then(function (response) {\n        setRand(response.data);\n      });\n  });\n\n  const [board, setBoard] = useState(boardDefault);\n  const [currentAttempt, setCurrentAttempt] = useState(0);\n\n  const handleClick = () => {\n    // Handle button click logic here\n    console.log(\"Button clicked!\");\n  };\n\n  return (\n    <div className=\"parent\">\n      <div>\n        <div className=\"title\">\n          <span style={{ display: \"inline-block\" }}>Numbling!</span>\n          <span style={{ display: \"inline-block\", marginLeft: \"auto\" }}>\n            <QuestionMarkButton onClick={handleClick} />\n          </span>\n        </div>\n        <AppContext.Provider\n          value={{ board, setBoard, currentAttempt, setCurrentAttempt, rand }}\n        >\n          <div className=\"game\">\n            <Number className=\"number\" />\n            <Guess className=\"guess\" number={test} guess={\"0123456789\"} />\n            <NumPad className=\"numpad\" />\n          </div>\n        </AppContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,MAAM,KAAM,2BAA2B,CAC9C,MAAO,CAAAC,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,aAAa,KAAQ,OAAO,CACjE,MAAO,WAAW,CAClB,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,YAAY,KAAQ,gCAAgC,CAC7D,MAAO,CAAAC,kBAAkB,KAAM,gCAAgC,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACjE,MAAO,MAAM,CAAAC,UAAU,cAAGR,aAAa,CAAC,CAAC,CAEzC,QAAS,CAAAS,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACc,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CACnC,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACdE,KAAK,CACFe,GAAG,CAAC,6CAA6C,CAAC,CAClDC,IAAI,CAAC,SAAUC,QAAQ,CAAE,CACxBL,OAAO,CAACK,QAAQ,CAACC,IAAI,CAAC,CACxB,CAAC,CAAC,CACN,CAAC,CAAC,CAEF,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGvB,QAAQ,CAACI,YAAY,CAAC,CAChD,KAAM,CAACoB,cAAc,CAAEC,iBAAiB,CAAC,CAAGzB,QAAQ,CAAC,CAAC,CAAC,CAEvD,KAAM,CAAA0B,WAAW,CAAGA,CAAA,GAAM,CACxB;AACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAChC,CAAC,CAED,mBACErB,IAAA,QAAKsB,SAAS,CAAC,QAAQ,CAAAC,QAAA,cACrBrB,KAAA,QAAAqB,QAAA,eACErB,KAAA,QAAKoB,SAAS,CAAC,OAAO,CAAAC,QAAA,eACpBvB,IAAA,SAAMwB,KAAK,CAAE,CAAEC,OAAO,CAAE,cAAe,CAAE,CAAAF,QAAA,CAAC,WAAS,CAAM,CAAC,cAC1DvB,IAAA,SAAMwB,KAAK,CAAE,CAAEC,OAAO,CAAE,cAAc,CAAEC,UAAU,CAAE,MAAO,CAAE,CAAAH,QAAA,cAC3DvB,IAAA,CAACF,kBAAkB,EAAC6B,OAAO,CAAER,WAAY,CAAE,CAAC,CACxC,CAAC,EACJ,CAAC,cACNnB,IAAA,CAACG,UAAU,CAACyB,QAAQ,EAClBC,KAAK,CAAE,CAAEd,KAAK,CAAEC,QAAQ,CAAEC,cAAc,CAAEC,iBAAiB,CAAEX,IAAK,CAAE,CAAAgB,QAAA,cAEpErB,KAAA,QAAKoB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBvB,IAAA,CAACT,MAAM,EAAC+B,SAAS,CAAC,QAAQ,CAAE,CAAC,cAC7BtB,IAAA,CAACX,KAAK,EAACiC,SAAS,CAAC,OAAO,CAACQ,MAAM,CAAEzB,IAAK,CAAC0B,KAAK,CAAE,YAAa,CAAE,CAAC,cAC9D/B,IAAA,CAACV,MAAM,EAACgC,SAAS,CAAC,QAAQ,CAAE,CAAC,EAC1B,CAAC,CACa,CAAC,EACnB,CAAC,CACH,CAAC,CAEV,CAEA,cAAe,CAAAlB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}