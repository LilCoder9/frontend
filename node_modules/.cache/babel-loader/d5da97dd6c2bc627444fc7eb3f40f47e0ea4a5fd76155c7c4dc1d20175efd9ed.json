{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xmanhowell9\\\\Desktop\\\\NUMBLE\\\\frontend\\\\src\\\\components\\\\Key.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../App';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Key = ({\n  keyVal,\n  bigKey,\n  errorMes\n}) => {\n  _s();\n  const {\n    board,\n    setBoard,\n    currentAttempt,\n    setCurrentAttempt,\n    rand\n  } = useContext(AppContext);\n  const [selction, setSelection] = useState(\"\");\n  const [prev, setPrev] = useState(false);\n  async function selectLetter(e) {\n    e.preventDefault();\n    setSelection(keyVal);\n    const number = String(keyVal);\n    const message = \"\";\n    try {\n      const response = await axios.post(\"http://localhost:3001/post_number\", {\n        number,\n        message\n      });\n      console.log(\"POST request successful:\", response.data);\n      if (response.data != null) {\n        for (let i = 0; i < board.length; i++) {\n          if (response.data[i] !== board[i]) {\n            setBoard(response.data);\n            setCurrentAttempt(currentAttempt + 1);\n            console.log(\"HI\");\n            // setPrev(true);\n            break;\n          }\n        }\n        message;\n      }\n    } catch (error) {\n      console.error(\"Error in POST request:\", error);\n    }\n  }\n  //updating array and recieving from node two data at same time\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"key\",\n    id: bigKey && \"big\",\n    onClick: selectLetter,\n    children: keyVal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Key, \"20qYLFsTZUSK8HJJj98JdW6K2vA=\");\n_c = Key;\nexport default Key;\nvar _c;\n$RefreshReg$(_c, \"Key\");","map":{"version":3,"names":["React","useContext","useState","AppContext","axios","jsxDEV","_jsxDEV","Key","keyVal","bigKey","errorMes","_s","board","setBoard","currentAttempt","setCurrentAttempt","rand","selction","setSelection","prev","setPrev","selectLetter","e","preventDefault","number","String","message","response","post","console","log","data","i","length","error","className","id","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/xmanhowell9/Desktop/NUMBLE/frontend/src/components/Key.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { AppContext } from '../App'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst Key = ({keyVal , bigKey , errorMes}) => {\r\n\r\n    const {board,setBoard,currentAttempt,setCurrentAttempt,rand} = useContext(AppContext);\r\n    const [selction,setSelection] = useState(\"\");\r\n    const [prev,setPrev]=useState(false);\r\n    \r\n      async function selectLetter(e){\r\n        e.preventDefault()\r\n        setSelection(keyVal);\r\n          const number = String(keyVal)\r\n          const message=\"\"\r\n        try {\r\n            const response = await axios.post(\"http://localhost:3001/post_number\", {number , message });\r\n            console.log(\"POST request successful:\", response.data);\r\n            if(response.data != null){\r\n                for (let i = 0; i < board.length; i++) {\r\n                    if (response.data[i] !== board[i]) {\r\n                        setBoard(response.data)\r\n                        setCurrentAttempt(currentAttempt+1)\r\n                        console.log(\"HI\")\r\n                       // setPrev(true);\r\n                        break;\r\n                    }\r\n                  }\r\n                  message\r\n                \r\n            }\r\n            \r\n          } catch (error) {\r\n            console.error(\"Error in POST request:\", error);\r\n          }\r\n          \r\n        \r\n    }\r\n    //updating array and recieving from node two data at same time\r\n\r\n  return (\r\n    <div className='key' id={bigKey && \"big\"} onClick={selectLetter}>\r\n      {keyVal}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Key\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,QAAQ;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIzB,MAAMC,GAAG,GAAGA,CAAC;EAACC,MAAM;EAAGC,MAAM;EAAGC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAE1C,MAAM;IAACC,KAAK;IAACC,QAAQ;IAACC,cAAc;IAACC,iBAAiB;IAACC;EAAI,CAAC,GAAGf,UAAU,CAACE,UAAU,CAAC;EACrF,MAAM,CAACc,QAAQ,EAACC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,IAAI,EAACC,OAAO,CAAC,GAAClB,QAAQ,CAAC,KAAK,CAAC;EAElC,eAAemB,YAAYA,CAACC,CAAC,EAAC;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,YAAY,CAACV,MAAM,CAAC;IAClB,MAAMgB,MAAM,GAAGC,MAAM,CAACjB,MAAM,CAAC;IAC7B,MAAMkB,OAAO,GAAC,EAAE;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,mCAAmC,EAAE;QAACJ,MAAM;QAAGE;MAAQ,CAAC,CAAC;MAC3FG,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,QAAQ,CAACI,IAAI,CAAC;MACtD,IAAGJ,QAAQ,CAACI,IAAI,IAAI,IAAI,EAAC;QACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,KAAK,CAACqB,MAAM,EAAED,CAAC,EAAE,EAAE;UACnC,IAAIL,QAAQ,CAACI,IAAI,CAACC,CAAC,CAAC,KAAKpB,KAAK,CAACoB,CAAC,CAAC,EAAE;YAC/BnB,QAAQ,CAACc,QAAQ,CAACI,IAAI,CAAC;YACvBhB,iBAAiB,CAACD,cAAc,GAAC,CAAC,CAAC;YACnCe,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;YAClB;YACC;UACJ;QACF;QACAJ,OAAO;MAEb;IAEF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EAGN;EACA;;EAEF,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAACC,EAAE,EAAE3B,MAAM,IAAI,KAAM;IAAC4B,OAAO,EAAEhB,YAAa;IAAAiB,QAAA,EAC7D9B;EAAM;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAA/B,EAAA,CAzCKJ,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA2CT,eAAeA,GAAG;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}