{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xmanhowell9\\\\Desktop\\\\NUMBLE\\\\frontend\\\\src\\\\components\\\\Key.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../App';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Key = ({\n  keyVal,\n  bigKey\n}) => {\n  _s();\n  const {\n    board,\n    setBoard,\n    currentAttempt,\n    setCurrentAttempt,\n    rand\n  } = useContext(AppContext);\n  const [selction, setSelection] = useState(\"\");\n  const [prev, setPrev] = useState([0]);\n  async function selectLetter(e) {\n    e.preventDefault();\n    setSelection(keyVal);\n    const number = String(keyVal);\n    try {\n      const response = await axios.post(\"http://localhost:3001/post_number\", {\n        number\n      });\n      console.log(\"POST request successful:\", response.data);\n      if (response.data != null) {\n        const newBoard = [...board];\n        newBoard[number - 1] = rand[currentAttempt];\n        setBoard(response.data);\n        setCurrentAttempt(currentAttempt + 1);\n      }\n      setPrev(board);\n    } catch (error) {\n      console.error(\"Error in POST request:\", error);\n    }\n  }\n  //updating array and recieving from node two data at same time\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"key\",\n    id: bigKey && \"big\",\n    onClick: selectLetter,\n    children: keyVal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Key, \"bgaG+tL8wSf7tfOYne0RKFT/2rs=\");\n_c = Key;\nexport default Key;\nvar _c;\n$RefreshReg$(_c, \"Key\");","map":{"version":3,"names":["React","useContext","useState","AppContext","axios","jsxDEV","_jsxDEV","Key","keyVal","bigKey","_s","board","setBoard","currentAttempt","setCurrentAttempt","rand","selction","setSelection","prev","setPrev","selectLetter","e","preventDefault","number","String","response","post","console","log","data","newBoard","error","className","id","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/xmanhowell9/Desktop/NUMBLE/frontend/src/components/Key.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { AppContext } from '../App'\r\nimport axios from 'axios'\r\n\r\n\r\nconst Key = ({keyVal , bigKey}) => {\r\n\r\n    const {board,setBoard,currentAttempt,setCurrentAttempt,rand} = useContext(AppContext);\r\n    const [selction,setSelection] = useState(\"\");\r\n    const [prev,setPrev]=useState([0]);\r\n    \r\n      async function selectLetter(e){\r\n        e.preventDefault()\r\n        setSelection(keyVal);\r\n          const number = String(keyVal)\r\n        try {\r\n            const response = await axios.post(\"http://localhost:3001/post_number\", {number });\r\n            console.log(\"POST request successful:\", response.data);\r\n            if(response.data != null){\r\n                const newBoard =[...board]\r\n                newBoard[ number-1] = rand[currentAttempt]\r\n                setBoard(response.data)\r\n                \r\n                setCurrentAttempt(currentAttempt+1)\r\n            }\r\n            setPrev(board);\r\n          } catch (error) {\r\n            console.error(\"Error in POST request:\", error);\r\n          }\r\n          \r\n        \r\n    }\r\n    //updating array and recieving from node two data at same time\r\n\r\n  return (\r\n    <div className='key' id={bigKey && \"big\"} onClick={selectLetter}>\r\n      {keyVal}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Key\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,QAAQ;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,GAAG,GAAGA,CAAC;EAACC,MAAM;EAAGC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAE/B,MAAM;IAACC,KAAK;IAACC,QAAQ;IAACC,cAAc;IAACC,iBAAiB;IAACC;EAAI,CAAC,GAAGd,UAAU,CAACE,UAAU,CAAC;EACrF,MAAM,CAACa,QAAQ,EAACC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,IAAI,EAACC,OAAO,CAAC,GAACjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAEhC,eAAekB,YAAYA,CAACC,CAAC,EAAC;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,YAAY,CAACT,MAAM,CAAC;IAClB,MAAMe,MAAM,GAAGC,MAAM,CAAChB,MAAM,CAAC;IAC/B,IAAI;MACA,MAAMiB,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,mCAAmC,EAAE;QAACH;MAAO,CAAC,CAAC;MACjFI,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,QAAQ,CAACI,IAAI,CAAC;MACtD,IAAGJ,QAAQ,CAACI,IAAI,IAAI,IAAI,EAAC;QACrB,MAAMC,QAAQ,GAAE,CAAC,GAAGnB,KAAK,CAAC;QAC1BmB,QAAQ,CAAEP,MAAM,GAAC,CAAC,CAAC,GAAGR,IAAI,CAACF,cAAc,CAAC;QAC1CD,QAAQ,CAACa,QAAQ,CAACI,IAAI,CAAC;QAEvBf,iBAAiB,CAACD,cAAc,GAAC,CAAC,CAAC;MACvC;MACAM,OAAO,CAACR,KAAK,CAAC;IAChB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EAGN;EACA;;EAEF,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAACC,EAAE,EAAExB,MAAM,IAAI,KAAM;IAACyB,OAAO,EAAEd,YAAa;IAAAe,QAAA,EAC7D3B;EAAM;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAA7B,EAAA,CAlCKH,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAoCT,eAAeA,GAAG;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}