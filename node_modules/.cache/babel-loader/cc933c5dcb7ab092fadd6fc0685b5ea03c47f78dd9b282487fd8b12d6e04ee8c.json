{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xmanhowell9\\\\Desktop\\\\NUMBLE\\\\frontend\\\\src\\\\components\\\\Key.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { AppContext } from \"../App\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomAlert = ({\n  message,\n  onClose\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-alert\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomAlert;\nconst Key = ({\n  keyVal,\n  bigKey,\n  errorFunction\n}) => {\n  _s();\n  const {\n    board,\n    setBoard,\n    currentAttempt,\n    setCurrentAttempt,\n    rand\n  } = useContext(AppContext);\n  const [selction, setSelection] = useState(\"\");\n  const [prev, setPrev] = useState(false);\n  async function selectLetter(e) {\n    e.preventDefault();\n    setSelection(keyVal);\n    const number = String(keyVal);\n    const message = \"\";\n    try {\n      const response = await axios.post(\"http://localhost:3001/post_number\", {\n        number\n      });\n      console.log(\"POST request successful:\", response.data);\n      if (response.data.inputArr != null) {\n        for (let i = 0; i < board.length; i++) {\n          if (response.data.inputArr[i] !== board[i]) {\n            setBoard(response.data.inputArr);\n            setCurrentAttempt(currentAttempt + 1);\n            console.log(\"HI\");\n            // setPrev(true);\n            break;\n          }\n        }\n        if (response.data.error !== \"\") {\n          setCustomAlert(response.data.error);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error in POST request:\", error);\n    }\n  }\n  //updating array and recieving from node two data at same time\n  const closeAlert = () => {\n    setCustomAlert(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"key\",\n    id: bigKey && \"big\",\n    onClick: selectLetter,\n    children: [keyVal, customAlert && /*#__PURE__*/_jsxDEV(CustomAlert, {\n      message: customAlert,\n      onClose: closeAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Key, \"J4k7r/bGj6XQcUc0Gk93d3Nk8FY=\");\n_c2 = Key;\nexport default Key;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomAlert\");\n$RefreshReg$(_c2, \"Key\");","map":{"version":3,"names":["React","useContext","useState","AppContext","axios","jsxDEV","_jsxDEV","CustomAlert","message","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Key","keyVal","bigKey","errorFunction","_s","board","setBoard","currentAttempt","setCurrentAttempt","rand","selction","setSelection","prev","setPrev","selectLetter","e","preventDefault","number","String","response","post","console","log","data","inputArr","i","length","error","setCustomAlert","closeAlert","id","customAlert","_c2","$RefreshReg$"],"sources":["C:/Users/xmanhowell9/Desktop/NUMBLE/frontend/src/components/Key.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport axios from \"axios\";\r\n\r\nconst CustomAlert = ({ message, onClose }) => {\r\n  return (\r\n    <div className=\"custom-alert\">\r\n      <p>{message}</p>\r\n      <button onClick={onClose}>Close</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Key = ({ keyVal, bigKey, errorFunction }) => {\r\n  const { board, setBoard, currentAttempt, setCurrentAttempt, rand } =\r\n    useContext(AppContext);\r\n  const [selction, setSelection] = useState(\"\");\r\n  const [prev, setPrev] = useState(false);\r\n\r\n  async function selectLetter(e) {\r\n    e.preventDefault();\r\n    setSelection(keyVal);\r\n    const number = String(keyVal);\r\n    const message = \"\";\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3001/post_number\", {\r\n        number,\r\n      });\r\n      console.log(\"POST request successful:\", response.data);\r\n      if (response.data.inputArr != null) {\r\n        for (let i = 0; i < board.length; i++) {\r\n          if (response.data.inputArr[i] !== board[i]) {\r\n            setBoard(response.data.inputArr);\r\n            setCurrentAttempt(currentAttempt + 1);\r\n            console.log(\"HI\");\r\n            // setPrev(true);\r\n            break;\r\n          }\r\n        }\r\n        if (response.data.error !== \"\") {\r\n          setCustomAlert(response.data.error);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error in POST request:\", error);\r\n    }\r\n  }\r\n  //updating array and recieving from node two data at same time\r\n  const closeAlert = () => {\r\n    setCustomAlert(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"key\" id={bigKey && \"big\"} onClick={selectLetter}>\r\n      {keyVal}\r\n      {customAlert && (\r\n        <CustomAlert message={customAlert} onClose={closeAlert} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Key;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}